{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saber\\\\StudentFormAndData\\\\my-react-app\\\\src\\\\components\\\\StudentTable\\\\index.js\";\nimport { Component } from 'react';\nimport { TailSpin } from 'react-loader-spinner';\nimport TableItem from '../TableItem';\nimport FilterData from '../FilterData';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StudentTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      tableData: [],\n      searchInput: ''\n    };\n    this.getData = async () => {\n      const {\n        searchInput\n      } = this.state;\n      if (searchInput === '') {\n        try {\n          const apiUrl = `http://localhost:3005/student`;\n          const response = await fetch(apiUrl);\n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n          const data = await response.json(); // Extract JSON data from the response\n          console.log(data.length);\n          const formattedData = data.map(eachItem => ({\n            Name: eachItem.Name,\n            StudentID: eachItem.StudentID,\n            StudentCourse: eachItem.StudentCourse,\n            StudentYear: eachItem.StudentYear,\n            State: eachItem.State,\n            Address: eachItem.Address\n          }));\n          console.log(formattedData);\n          this.setState({\n            tableData: formattedData,\n            isLoading: false\n          });\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      } else {\n        try {\n          const apiUrl = `http://localhost:3005/student/${searchInput}`;\n          const response = await fetch(apiUrl);\n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n          const SearchedData = await response.json();\n          console.log(SearchedData.length);\n          this.setState({\n            tableData: SearchedData,\n            isLoading: false\n          });\n        } catch (error) {\n          console.log(error);\n          console.error(\"Error fetching data:\", error);\n        }\n      }\n    };\n    this.enterSearchInput = () => {\n      this.getData();\n    };\n    this.changeSearchInput = searchInput => {\n      this.setState({\n        searchInput\n      });\n    };\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    const {\n      isLoading,\n      tableData,\n      searchInput\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-list-container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(TailSpin, {\n        type: \"TailSpin\",\n        color: \"#00BFFF\",\n        height: 50,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FilterData, {\n          searchInput: searchInput,\n          changeSearchInput: this.changeSearchInput,\n          enterSearchInput: this.enterSearchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Course\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tableData.map(item => /*#__PURE__*/_jsxDEV(TableItem, {\n              tableData: item\n            }, item.StudentID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default StudentTable;","map":{"version":3,"names":["Component","TailSpin","TableItem","FilterData","jsxDEV","_jsxDEV","StudentTable","constructor","args","state","isLoading","tableData","searchInput","getData","apiUrl","response","fetch","ok","Error","status","data","json","console","log","length","formattedData","map","eachItem","Name","StudentID","StudentCourse","StudentYear","State","Address","setState","error","SearchedData","enterSearchInput","changeSearchInput","componentDidMount","render","className","children","type","color","height","width","fileName","_jsxFileName","lineNumber","columnNumber","item"],"sources":["C:/Users/saber/StudentFormAndData/my-react-app/src/components/StudentTable/index.js"],"sourcesContent":["import {Component} from 'react'\r\nimport {TailSpin} from 'react-loader-spinner'\r\nimport TableItem from '../TableItem'\r\nimport FilterData from '../FilterData'\r\nimport './index.css'\r\n\r\nclass StudentTable extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    tableData: [],\r\n    searchInput: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  getData = async () => {\r\n    const {searchInput} = this.state\r\n\r\n    if (searchInput === '') {\r\n        try {\r\n            const apiUrl = `http://localhost:3005/student`;\r\n            const response = await fetch(apiUrl);\r\n            if (!response.ok) {\r\n              throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            const data = await response.json(); // Extract JSON data from the response\r\n            console.log(data.length)\r\n            const formattedData = data.map(eachItem => ({\r\n              Name: eachItem.Name,\r\n              StudentID: eachItem.StudentID,\r\n              StudentCourse: eachItem.StudentCourse,\r\n              StudentYear: eachItem.StudentYear,\r\n              State: eachItem.State,\r\n              Address: eachItem.Address,\r\n            }))\r\n            console.log(formattedData)\r\n            this.setState({tableData: formattedData, isLoading: false});\r\n          } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n          }\r\n      \r\n    } else {\r\n\r\n      try {\r\n        const apiUrl = `http://localhost:3005/student/${searchInput}`;\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const SearchedData = await response.json()\r\n        console.log(SearchedData.length)\r\n\r\n        \r\n        this.setState({tableData: SearchedData, isLoading: false})\r\n      } catch (error) {\r\n        console.log(error)\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  enterSearchInput = () => {\r\n    this.getData()\r\n  }\r\n\r\n  changeSearchInput = searchInput => {\r\n    this.setState({searchInput})\r\n  }\r\n\r\n  render() {\r\n    const {isLoading, tableData, searchInput} = this.state\r\n    \r\n    return (\r\n      <div className=\"blog-list-container\">\r\n        {isLoading ? (\r\n          <TailSpin type=\"TailSpin\" color=\"#00BFFF\" height={50} width={50} />\r\n        ) : (\r\n          <div>\r\n            <FilterData\r\n              searchInput={searchInput}\r\n              changeSearchInput={this.changeSearchInput}\r\n              enterSearchInput={this.enterSearchInput}\r\n            />\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Name</th>\r\n                  <th>Year</th>\r\n                  <th>Course</th>\r\n                  <th>Address</th>\r\n                  <th>State</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tableData.map(item => (\r\n                \r\n                  <TableItem tableData={item} key={item.StudentID} />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default StudentTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}